{"version":3,"sources":["redux/dialogs-reducer.ts","components/Users/users.module.css","api/api.js","components/Nav/Nav.module.css","components/Nav/Nav.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","utils/objects-helpers.ts","redux/users-reducer.ts","components/Users/paginator/Paginator.tsx","assets/img/user.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/login/Login.tsx","redux/app-reducer.ts","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","components/common/preloader/formsControl/FormsControls.tsx","assets/img/preloadV2.svg","components/common/preloader/Preloader.tsx","components/common/preloader/formsControl/FromsControl.module.css","utils/validators/validators.ts","components/Header/Header.module.css","components/Users/paginator/paginator.module.css","redux/profile-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogsData","id","name","avatar","messageData","message","addMessageActionCreator","newMessageText","type","dialogsReducer","state","action","newMessage","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","deleteFollowUsers","userID","delete","postFollowUsers","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","logout","Nav","className","s","nav","item","to","activeClassName","activeLink","Music","props","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","paginator","onClick","p","cn","selectedPage","pageNumber","onPageChanged","User","user","src","photos","small","userUnknownPhoto","alt","photo","disabled","some","unfollow","follow","Users","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","totalCount","Header","header","loginBlock","isAuth","authLogoutTC","SET_USER_DATA","email","setAuthUserData","getAuthUserData","authReducer","HeaderContainer","auth","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Input","requiredField","error","formSummaryError","authLoginTC","res","messages","length","stopSubmit","_error","SET_INITIALIZED","initialized","appReducer","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withSuspense","component","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","text","validate","preloader","value","maxLength","ADD_POST","SET_USER_PROFILE","postsData","likeCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getUserStatus","updateUserStatus","newPost","postId"],"mappings":"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","file":"static/js/main.42a95993.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT';\r\n\r\nexport type dialogsPropsType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport type messagePropsType = {\r\n    id: number\r\n    message: string\r\n    avatar: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Dmitriy', avatar: 'https://cdn.freelance.ru/images/att/1324133_900_600.png' },\r\n        {id: 2, name: 'Yulia', avatar: 'https://i.pinimg.com/736x/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'},\r\n        {id: 3, name: 'Artemko', avatar: 'https://tiktok-wiki.ru/wp-content/uploads/2020/05/avatarki-dlya-tik-toka1.jpg'},\r\n        {id: 4, name: 'Eugen', avatar: 'https://tiktok-wiki.ru/wp-content/uploads/2020/05/avatarki-dlya-tik-toka1.jpg'}\r\n    ] as Array<dialogsPropsType>,\r\n    messageData: [\r\n        {id: 1, message: 'Hi', avatar: 'https://cdn.freelance.ru/images/att/1324133_900_600.png'},\r\n        {id: 2, message: 'How are you?', avatar: 'https://i.pinimg.com/736x/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'},\r\n        {id: 3, message: 'Go playing in football...', avatar: 'https://cdn.freelance.ru/images/att/1324133_900_600.png'},\r\n        {id: 4, message: 'bla bla bla', avatar: 'https://i.pinimg.com/736x/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'}\r\n    ] as Array<messagePropsType>,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype DialogsActionsTypes =\r\n    ReturnType<typeof addMessageActionCreator>\r\n\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage: messagePropsType = {\r\n                id: 7,\r\n                message: action.newMessageText,\r\n                avatar: 'https://cdn.freelance.ru/images/att/1324133_900_600.png'\r\n            }\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageText\r\n    } as const\r\n}\r\n\r\n    export default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__3TVDM\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '58116fc9-ed05-491d-aecb-342d6b37ccba'\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage= 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    deleteFollowUsers(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n    },\r\n    postFollowUsers(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n    },\r\n    getProfile (userID) {\r\n        console.warn('Obsolete method. Please use profileAPI!')\r\n        return profileAPI.getProfile(userID)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userID) {\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(data) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__10IT7\",\"item\":\"Nav_item__2inQ9\",\"activeLink\":\"Nav_activeLink__E45do\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Nav.module.css';\r\n\r\nconst Nav = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/Profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/Users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/Dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/News' activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/Music' activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item} >\r\n            <NavLink to='/Settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport s from './Music.module.css'\r\n\r\n\r\n\r\nconst Music = (props: any) => {\r\n    return <div>\r\n        My favorite music\r\n    </div>\r\n}\r\n\r\nexport default Music;","import React, {Component} from 'react';\r\nimport s from './News.module.css'\r\n\r\n\r\n\r\nconst News = (props: any) => {\r\n    return <div>\r\n        News about World!\r\n    </div>\r\n}\r\n\r\nexport default News;","import React, {Component} from 'react';\r\nimport s from './Settings.module.css'\r\n\r\n\r\n\r\nconst Settings = (props: any) => {\r\n    return <div>\r\n        Settings\r\n    </div>\r\n}\r\n\r\nexport default Settings;","\r\n\r\nexport const updateObjectInArray = (items: any, itemId: number, objPropName: any, newObjProps: any) => {\r\n    return items.map((item: any) => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\n\r\nexport type ActionTypes = ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleIsFollowingInProgress>\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserDataType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserDataType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalCount = (count: number) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        count\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport const toggleIsFollowingInProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalCount(data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleIsFollowingInProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    debugger\r\n\r\n    followUnfollowFlow(dispatch, userId, usersAPI.postFollowUsers.bind(usersAPI), followSuccess)\r\n\r\n}\r\n\r\nexport const unfollow = (userId: number) => async (dispatch: any) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.deleteFollowUsers.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from \"./paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n    portionSize: number\r\n}\r\n\r\nconst Paginator = (props: PropsType) => {\r\n    debugger\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionNumber = portionNumber * props.portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber((portionNumber - 1))}}>Prev</button>}\r\n            <div>\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(p => {\r\n                    //@ts-ignore\r\n                    return <span className={ cn({\r\n                        [s.selectedPage] : props.currentPage === p\r\n                    }, s.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }\r\n                                 }>{p}</span>\r\n\r\n                })}\r\n                { portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.3df90d3e.png\";","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userUnknownPhoto from \"../../assets/img/user.png\";\r\nimport {UserDataType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    users: UserDataType\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst User = (props: PropsType) => {\r\n\r\n    let user = props.users\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userUnknownPhoto} alt=''\r\n                             className={s.photo}/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          props.unfollow(user.id)\r\n                                      }}>UNFOLLOW</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          props.follow(user.id)\r\n                                      }}>FOLLOW</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n                        <div>\r\n                            {user.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\r\n                            {'u.location.city'}\r\n                        </div>\r\n                        <div>\r\n                            {'u.location.country'}\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {UserDataType} from \"../../redux/users-reducer\";\r\nimport Paginator from \"./paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    users: Array<UserDataType>\r\n    currentPage: number\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst Users = (props: PropsType) => {\r\n    debugger\r\n\r\n    const portionSize = 10;\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalItemsCount}\r\n                       pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged}\r\n                       currentPage={props.currentPage}\r\n                       portionSize={portionSize}\r\n            />\r\n            {\r\n                props.users.map(u => <User key={u.id}\r\n                                           users={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           follow={props.follow}\r\n                                           unfollow={props.unfollow}\r\n                    />\r\n                )\r\n            }\r\n\r\n        </div>)\r\n};\r\n\r\nexport default Users;","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    UserDataType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserDataType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    pageSize: number,\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    setCurrentPage: (pageNumber: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    requestUsers: any\r\n}\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalItemsCount={this.props.totalItemsCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   users={this.props.users}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, requestUsers}),\r\n    //withAuthRedirect\r\n)(UsersContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n    authLogoutTC: () => (dispatch: any) => void\r\n}\r\n\r\nconst Header = (props: PropsType) => {\r\n    return <header className={s.header}>\r\n        <img\r\n            src={'https://upload.wikimedia.org/wikipedia/ru/thumb/d/d3/Starbucks_Corporation_Logo_2011.svg/1200px-Starbucks_Corporation_Logo_2011.svg.png'}/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> {props.login}  <button onClick={props.authLogoutTC}>LogOUT</button></div>\r\n                : <NavLink to={'/login'}>\r\n                    Login\r\n                </NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nexport type LoginRequestDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\n\r\nexport type ActionTypes = ReturnType<typeof setAuthUserData>\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\ntype InitialStateType = {\r\n    id: number | null\r\n    email: string | null,\r\n    login:  string | null,\r\n    isAuth: boolean\r\n}\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id: number, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {\r\n            id,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n            if(response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n}\r\n\r\nexport const authLoginTC = (data: LoginRequestDataType) => async (dispatch: Dispatch) => {\r\n    let res = await authAPI.login(data)\r\n        if(res.data.resultCode === 0) {\r\n            //@ts-ignore\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = res.data.messages.length > 0 ? res.data.messages[0] : 'Email or password is wrong, please try again!'\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n}\r\nexport const authLogoutTC = () => async (dispatch: Dispatch) => {\r\n    let res = await authAPI.logout();\r\n        if(res.data.resultCode === 0) {\r\n            //@ts-ignore\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogoutTC} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: any\r\n    authLogoutTC: () => (dispatch: any) => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType>  {\r\n\r\n\r\n\r\n    render() {\r\n        //@ts-ignore\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n//@ts-ignore\r\nexport default connect(mapStateToProps, {authLogoutTC})(HeaderContainer);","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input,} from \"../common/preloader/formsControl/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLoginTC, LoginRequestDataType} from \"../../redux/auth-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport s from '../common/preloader/formsControl/FromsControl.module.css';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginRequestDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                {createField('Email', 'email', Input, [requiredField, maxLength50])}\r\n                {createField('Password', 'password', Input, [requiredField, maxLength50], {type: 'password'})}\r\n                {createField(null, 'rememberMe', Input, null, {type: 'checkbox'}, 'remember me')}\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginRequestDataType>({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype PropsType = {\r\n    authLoginTC: (data: LoginRequestDataType) => (dispatch: Dispatch) => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst Login = (props: PropsType) => {\r\n\r\n    const onSubmit = (data: LoginRequestDataType) => {\r\n        props.authLoginTC(data)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n//@ts-ignore\r\nexport default connect(mapStateToProps, {authLoginTC})(Login);","import {Dispatch} from \"redux\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\n\r\nexport type ActionTypes = ReturnType<typeof setInitializedSuccess>\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () => {\r\n    return {\r\n        type: SET_INITIALIZED,\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(setInitializedSuccess())\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component: React.ComponentType) => {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n};\r\n\r\nexport default WithSuspense;","import React from 'react';\nimport './App.css';\nimport './components/Header/Header.module.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {Route} from 'react-router-dom';\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from './components/login/Login';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport withSuspense from './hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import (\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import (\"./components/Profile/ProfileContainer\"));\n\ntype PropsType = {\n    initializeApp: () => (dispatch: Dispatch<any>) => void\n    initialized: boolean\n}\n\nclass App extends React.Component<PropsType> {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/Dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/Profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/Users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/Login'\n                               render={() => <Login/>}/>\n                        <Route path='/News' component={News}/>\n                        <Route path='/Music' component={Music}/>\n                        <Route path='/Settings' component={Settings}/>\n                    </div>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => (\n    {\n        initialized: state.app.initialized\n    }\n)\n\n\n//@ts-ignore\nexport default connect(mapStateToProps, {initializeApp})(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {}\r\n\r\nconst sidebarReducer = (state = initState, action: any) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage:  profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport s from './FromsControl.module.css'\r\nimport {requiredField} from \"../../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, component: any, validators: any, props: any = {}, text: string = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               component={component}\r\n               name={name}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export default __webpack_public_path__ + \"static/media/preloadV2.7245460a.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloadV2.svg\";\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst Preloader = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FromsControl_formControl__EiJFe\",\"error\":\"FromsControl_error__2bNgd\",\"formSummaryError\":\"FromsControl_formSummaryError__14KoS\"};","export const requiredField = (value: string)=> {\r\n    if(value) return undefined;\r\n    return 'Field is required!';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value.length > maxLength) return `Max length must be not more than ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ZeNHs\",\"loginBlock\":\"Header_loginBlock__2eJil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__3eLnS\",\"pageNumber\":\"paginator_pageNumber__KJ0S6\",\"selectedPage\":\"paginator_selectedPage__Gh9Ze\"};","import {addMessageActionCreator} from \"./dialogs-reducer\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nexport type postsType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 15},\r\n        {id: 2, message: 'Its my first post!', likeCount: 99},\r\n        {id: 2, message: 'Its my first post!', likeCount: 45},\r\n        {id: 2, message: 'Its my first post!', likeCount: 45},\r\n        {id: 2, message: 'Its my first post!', likeCount: 45}\r\n    ] as Array<postsType>,\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfileActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: postsType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [newPost, ...state.postsData],\r\n            };\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"SET_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'DELETE_POST':\r\n            return {...state,\r\n                    postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText,\r\n    } as const\r\n}\r\nexport const setUserProfile = (profile: any) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: 'SET_STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: 'DELETE_POST',\r\n        postId\r\n    } as const\r\n}\r\n\r\nexport const getUserProfile = (userID: number) => async (dispatch: (action: ProfileActionsTypes) => void) => {\r\n    let response = await usersAPI.getProfile(userID)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserStatus = (userID: number) => async (dispatch: (action: ProfileActionsTypes) => void) => {\r\n    let response = await profileAPI.getStatus(userID)\r\n        dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => async (dispatch: (action: ProfileActionsTypes) => void) => {\r\n    let response =  await profileAPI.updateStatus(status)\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n}\r\n\r\n\r\nexport type ProfileActionsTypes = ReturnType<typeof addPostActionCreator> |\r\n    ReturnType<typeof addMessageActionCreator> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus> |\r\n    ReturnType<typeof deletePost>\r\n\r\nexport default profileReducer;"],"sourceRoot":""}